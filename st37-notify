#!/usr/bin/env bash

ST37_NOTIFY_DURATION=3000

if !(st37-dep "st37-conf" "notify-send"); then
    exit 1
fi

# Private: Disables notifications from being sent
disable_notifications() {
    st37-conf notify.disabled true
}

# Private: Allows notifications to be sent
enable_notifications() {
    st37-conf -c notify.disabled
}

# Sends a notification to the notification service
#
# $1 - The title of the notification
# $2 - The message of the notification
# $3 - If 1, indicates the notification is an error
#
# Returns the state of the notification being sent 
send_notification() {
    disabled=$(st37-conf notify.disabled)
    if [ ! -z "$disabled" ]; then
        exit 0
    fi

    duration=$(st37-conf notify.duration)
    if [ -z "$duration" ]; then
        duration=$ST37_NOTIFY_DURATION
    fi

    urgency="normal"
    if [ ! -z "$3" ] && [ $3 == 1 ]; then
        urgency="critical"
    fi
    
    notify-send "$1" --urgency "$urgency" --expire-time "$duration" -- "$2"
}

# Display usage text
usage() {
    name="${0##*/}"
    echo "Usage:"
    echo "  $name [-e] <title> <message>  Display a notification."
    echo "  $name -0                      Disable notifications."
    echo "  $name -1                      Enable notifications."
    echo "  $name -h                      Display this help text."
    exit 1
}

is_error=0
while getopts ":h01e" opt; do
    case "${opt}" in
        h)
            usage
            ;;
        0)
            disable_notifications > /dev/null
            exit 0
            ;;
        1)
            enable_notifications > /dev/null
            exit 0
            ;;
        e)
            is_error=1
            ;;
    esac
done

title="$1"
message="$2"
if [ "$#" -ne 2 ]; then
    if [ "$#" -eq 3 ] && [ $is_error == 1 ]; then
        title="$2"
        message="$3"
    else
        usage
    fi
fi

send_notification "$title" "$message" "$is_error"

